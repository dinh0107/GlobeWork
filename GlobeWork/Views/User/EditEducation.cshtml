@model GlobeWork.ViewModel.InsertEduViewModel
@{
    int currentYear = DateTime.Now.Year;
    int startYear = 1960;
    int starMonth = 0;
    int starYear = 0;
    int endMonth = 0;
    int endYear = 0;

    if (Model.Education.Active)
    {
        starMonth = Convert.ToInt32(Model.Education.StartDate.Split('/')[0]);
        starYear = Convert.ToInt32(Model.Education.StartDate.Split('/')[1]);
    }
    else
    {
        starMonth = Convert.ToInt32(Model.Education.StartDate.Split('/')[0]);
        starYear = Convert.ToInt32(Model.Education.StartDate.Split('/')[1]);
        endMonth = Convert.ToInt32(Model.Education.EndDate.Split('/')[0]);
        endYear = Convert.ToInt32(Model.Education.EndDate.Split('/')[1]);
    }
}
<div class="modal-header">
    <strong class="modal-title" id="exampleModalScrollableTitle">Học vấn</strong>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">×</span>
    </button>
</div>
<form class="modal-body update-education">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(a => a.Education.Id)
    <div class="form-group">
        <label class="font-weight-bold">
            Trường *
        </label>
        @Html.TextBoxFor(a => a.Education.School, new { @placeholder = "Trường học", @class = "form-control" })
        @Html.ValidationMessageFor(a => a.Education.School)
    </div>
    <div class="form-group">
        <label class="font-weight-bold">
            Chuyên ngành
        </label>
        @Html.TextBoxFor(a => a.Education.Majors, new { @placeholder = "Công nghệ phần mềm, Kinh tế, Tự động hóa, ....", @class = "form-control" })
        @Html.ValidationMessageFor(a => a.Education.Majors)
    </div>
    <div class="form-group">
        <label class="font-weight-bold">
            Thời gian *
        </label>
        <label for="active-edu">
            @Html.CheckBoxFor(a => a.Education.Active , new { @id = "active-edu" })
            Tôi đang học ở đây
        </label>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-lg-3 col-6 mb-lg-0 mb-3">
                <label for="startMonth">Bắt đầu</label>
                <select class="form-control" name="StarMonth" id="startMonth" required>
                    <option value="">Chọn tháng</option>
                    @for (var i = 1; i <= 12; i++)
                    {
                        <option @if (i == Convert.ToInt32(starMonth)) { @Html.Raw("selected") } value="@i">Tháng @i</option>
                    }
                </select>
            </div>
            <div class="col-lg-3 col-6 d-flex align-items-end mb-lg-0 mb-3">
                <label for="startYear">&nbsp;</label>
                <select class="form-control" name="StarYear" id="startYear" required>
                    <option value="">Chọn năm</option>
                    @for (var i = currentYear; i >= startYear; i--)
                    {
                        <option @if (i == Convert.ToInt32(startYear)) { @Html.Raw("selected") } value="@i">@i</option>
                    }
                </select>
            </div>
            <div class="col-lg-3 col-6 end-edu">
                <label for="endMonth">Kết thúc</label>
                <select class="form-control" name="EndMonth" id="endMonth">
                    <option value="">Chọn tháng</option>
                    @for (var i = 1; i <= 12; i++)
                    {
                        <option @if (i == Convert.ToInt32(endMonth)) { @Html.Raw("selected") } value="@i">Tháng @i</option>
                    }
                </select>
            </div>
            <div class="col-lg-3 col-6  end-edu">
                <label for="endYear">&nbsp;</label>
                <select class="form-control" name="EndYear" id="endYear">
                    <option value="">Chọn năm</option>
                    @for (var i = currentYear; i >= startYear; i--)
                    {
                        <option @if (i == Convert.ToInt32(endYear)) { @Html.Raw("selected") } value="@i">@i</option>
                    }
                </select>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="font-weight-bold">
            Mô tả chi tiết
        </label>
        @Html.TextAreaFor(a => a.Education.Description, new { @class = "form-control", @placeholder = "Mô tả chi tiết quá trình học của bạn để nhà tuyển dụng có thể hiểu bạn hơn", @rows = "6" })
    </div>
    <div class="d-flex justify-content-center">
        <button type="button" class="btn btn-danger mr-3" onclick="DeleteEdu(@Model.Education.Id)">Xóa</button>
        <button type="submit" class="btn btn-success">Cập nhật</button>
    </div>
</form>
@Scripts.Render("~/bundles/jqueryval")
<script>
    if ($("#active-edu").is(":checked")) {
        $(".end-edu").hide();
    } else {
        $(".end-edu").show();
    }
    $("#active-edu").change(function () {
        if ($(this).is(":checked")) {
            $(".end-edu").hide();
        } else {
            $(".end-edu").show();
        }
    });
    $(".update-education").submit(function (e) {
        e.preventDefault();
        var formData = $(this).serialize();
        $.post("/User/EditEducation", formData, function (data) {
            if (data.success) {
                new Notify({
                    status: 'success',
                    text: data.message,
                    effect: 'slide',
                    speed: 600,
                    showIcon: true,
                    showCloseButton: true,
                    autoclose: true,
                    autotimeout: 3000,
                    gap: 10,
                    distance: 20,
                    type: 3,
                    position: 'right bottom'
                });
                $(".close").click()
                setTimeout(function () {
                    location.reload();
                }, 1500);
            } else {
                new Notify({
                    status: 'error',
                    text: data.message,
                    effect: 'slide',
                    speed: 600,
                    showIcon: true,
                    showCloseButton: true,
                    autoclose: true,
                    autotimeout: 3000,
                    gap: 10,
                    distance: 20,
                    type: 3,
                    position: 'right bottom'
                });
            }
        });
    });

    function DeleteEdu(id) {
        $.post("/User/RemoveEdu", { id: id }, function (data) {
            if (data.success) {
                new Notify({
                    status: 'success',
                    text: data.message,
                    effect: 'slide',
                    speed: 600,
                    showIcon: true,
                    showCloseButton: true,
                    autoclose: true,
                    autotimeout: 3000,
                    gap: 10,
                    distance: 20,
                    type: 3,
                    position: 'right bottom'
                });
                $(".close").click()
                $("div[data-edu='" + id + "']").fadeOut();

            } else {
                new Notify({
                    status: 'error',
                    text: data.message,
                    effect: 'slide',
                    speed: 600,
                    showIcon: true,
                    showCloseButton: true,
                    autoclose: true,
                    autotimeout: 3000,
                    gap: 10,
                    distance: 20,
                    type: 3,
                    position: 'right bottom'
                });
            }
        })
    }

</script>