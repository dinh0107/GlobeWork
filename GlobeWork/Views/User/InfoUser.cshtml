@model GlobeWork.ViewModel.ChangeInfoUserViewModel
@{
    Layout = null;
}

<div id="infoUser" class="modal fade show" tabindex="-1" role="dialog" aria-labelledby="exampleModalScrollableTitle" aria-modal="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <strong class="modal-title" id="exampleModalScrollableTitle">Thông tin cá nhân</strong>
                <button type="button" class="close close-info" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <form class="modal-body  customer-form" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="form-group">
                    @Html.LabelFor(a => a.FullName)
                    @Html.TextBoxFor(a => a.FullName, new { @placeholder = "Nhập họ và tên", @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(a => a.Classtify)
                    @Html.TextBoxFor(a => a.Classtify, new { @placeholder = "Chức vụ", @class = "form-control" })
                </div>
                <div class="form-group">
                    <div class="add-item add-education" data-toggle="modal" data-target="#education">
                        <i class="fal fa-plus mr-2"></i>Thêm thông tin học vấn
                    </div>
                </div>
                <div class="form-group">
                    <div class="add-item add-education" data-toggle="modal" data-target="#experience">
                        <i class="fal fa-plus mr-2"></i>Thêm kinh nghiệm
                    </div>
                </div>
                <div class="form-group">
                    <label>
                        Địa chỉ hiện tại*
                    </label>
                    <div class="d-flex" style="gap:.625rem">
                        <label for="nam">
                            <input id="nam" type="radio" @if (Model.Gender == "Nam") { @Html.Raw("checked") } name="Gender" value="Nam" /> Nam
                        </label>
                        <label for="nu">
                            <input id="nu" type="radio" @if (Model.Gender == "Nữ") { @Html.Raw("checked") } name="Gender" value="Nữ" /> Nữ
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <label>
                        Ngày sinh
                    </label>
                    <div class="row">
                        <div class="col-4">
                            <select class="form-control " name="year" id="year">
                                <option value="">Năm</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <select class="form-control " name="month" id="thang">
                                <option value="">Tháng</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <select class="form-control " name="day" id="ngay">
                                <option value="">Ngày</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label>
                        Địa chỉ hiện tại*
                    </label>
                    @Html.TextBoxFor(a => a.Address, new { @placeholder = "Nhập địa chỉ", @class = "form-control" })
                </div>
                <div class="form-group">
                    <label>
                        Email liên lạc*
                    </label>
                    @Html.TextBoxFor(a => a.Email, new { @placeholder = "Nhập địa chỉ email", @class = "form-control", @disabled = "" })
                </div>
                <div class="form-group">
                    <label>
                        Số điện thoại liên lạc*
                    </label>
                    @Html.TextBoxFor(a => a.Phone, new { @placeholder = "Thêm số điện thoại", @class = "form-control" })
                </div>
                <div class="form-group">
                    <label>
                        Liên kết*
                        <span class="user-sub">Thay đổi tên người dùng trên địa chỉ liên kết đến hồ sơ của bạn.</span>
                    </label>
                    <div class="row">
                        <div class="col-lg-8">
                            @Html.TextBoxFor(a => a.Url, new { @placeholder = "Nhập liên kết", @class = "form-control" })
                        </div>
                        <div class="col-lg-4">
                            <div class="check-username">
                                <i class="fal fa-check"></i>
                                Liên kết khả dụng
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label>
                        Giới thiệu bản thân
                    </label>
                    @Html.TextAreaFor(a => a.Description, new { @class = "form-control description-user", @placeholder = "Thêm mô tả bản thân để nhà tuyển dụng có thể hiểu hơn về bạn" })
                </div>
                <div class="text-center">
                    <button type="submit" class="form-sub ">
                        Cập nhật
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script>
 $(".customer-form").submit(function (event) {
     event.preventDefault();
     var formData = {
         FullName: $("input[name='FullName']").val(),
         Classtify: $("input[name='Classtify']").val(),
         Email: $("input[name='Email']").val(),
         Address: $("input[name='Address']").val(),
         Phone: $("input[name='Phone']").val(),
         Url: $("input[name='Url']").val(),
         Gender: $("input[name='Gender']").val(),
         Description: $(".description-user").val(),
         Date: $("#ngay").val(),
         Month: $("#thang").val(),
         Year: $("#year").val(),
         Experiences: [],
         Educations: []
     };

     $(".box-education .box-input").each(function () {
         var educationData = {
             StartDate: $(this).find(".start-date").val(),
             EndDate: $(this).find(".end-date").val(),
             Majors: $(this).find(".major").val(),
             School: $(this).find(".school").val(),
             Description: $(this).find(".description").val(),
             Id: $(this).find(".eduId").val()
         };

         formData.Educations.push(educationData);
     });
     $(".box-experience .box-input").each(function () {
         var experienceData = {
             StartDate: $(this).find(".start-date").val(),
             EndDate: $(this).find(".end-date").val(),
             Company: $(this).find(".company").val(),
             Position: $(this).find(".position").val(),
             Description: $(this).find(".description").val(),
             Id: $(this).find(".expId").val(),
         };

         formData.Experiences.push(experienceData);
     });

     $.ajax({
         type: "POST",
         url: "/User/UpdateCv",
         contentType: "application/json",
         data: JSON.stringify(formData),
         success: function (response) {
             //console.log(JSON.stringify(formData))
             new Notify({
                 status: 'success',
                 text: "Cập nhật thông tin thành công",
                 effect: 'slide',
                 speed: 600,
                 showIcon: true,
                 showCloseButton: true,
                 autoclose: true,
                 autotimeout: 3000,
                 gap: 10,
                 distance: 20,
                 type: 3,
                 position: 'right bottom'
             });
             var jsonData = JSON.stringify(formData);
             var parsedData = JSON.parse(jsonData);

             $("#Description").empty();
             $(".company-detail-name").empty();
             $("#classtify").empty();
             $(".company-detail-name").text(parsedData.FullName);
             $("#classtify").text(parsedData.Classtify);
             $("#Description").text(parsedData.Description);
             $(".close-info").click();
             $(".cat-user").click();
         },
         error: function (error) {
             new Notify({
                 status: 'error',
                 text: "Đã xảy ra lỗi khi cập nhật thông tin",
                 effect: 'slide',
                 speed: 600,
                 showIcon: true,
                 showCloseButton: true,
                 autoclose: true,
                 autotimeout: 3000,
                 gap: 10,
                 distance: 20,
                 type: 3,
                 position: 'right bottom'
             });
         }
     });
 });
 $('#Url').on('input', function () {
     var inputText = $(this).val().toLowerCase();
     var slug = convertToSlug(inputText);
     $(this).val(slug);
     $.post("/User/CheckUrl", { url: slug }, function (data) {
         if (data) {
             $('.check-username').html('<i class="fal fa-check"></i> Liên kết khả dụng');
             $('.form-sub').prop('disabled', false); // Kích hoạt nút submit
         } else {
             $('.check-username').html('<i class="fal fa-times"></i> Liên kết không khả dụng');
             $('.form-sub').prop('disabled', true); // Vô hiệu hóa nút submit
         }
     });
 });
 function convertToSlug(text) {
     text = text.toLowerCase();
     var from = "àáảãạăắằẳẵặâấầẩẫậèéẻẽẹêếềểễệìíỉĩịòóỏõọôốồổỗộơớờởỡợùúủũụưứừửữựỳýỷỹỵđ";
     var to = "aaaaaaaaaaaaaaaaaeeeeeeeeeeeiiiiiooooooooooooooooouuuuuuuuuuuyyyyyd";
     for (var i = 0, l = from.length; i < l; i++) {
         text = text.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));
     }
     text = text.replace(/\s+/g, '-');
     return text;
 }
 var modelMonth = @Model.Month;
 var modelYear = @Model.Year;
 var modelDate =  @Model.Date;

 var namSelect = $("#year");
 for (var i = 1900; i <= 2100; i++) {
     var option = $('<option></option>').val(i).html(i);
     if (i === modelYear) {
         option.attr('selected', true);
     }
     namSelect.append(option);
 }
 // Đổ giá trị cho tháng
 var thangSelect = $("#thang");
 for (var i = 1; i <= 12; i++) {
     var option = $('<option></option>').val(i).html(i);
     if (i === modelMonth) {
         option.attr('selected', true);
     }
     thangSelect.append(option);
 }

 // Đổ giá trị cho ngày
 var ngaySelect = $("#ngay");
 for (var i = 1; i <= 31; i++) {
     var option = $('<option></option>').val(i).html(i);
     if (i === modelDate) {
         option.attr('selected', true);
     }
     ngaySelect.append(option);
 }

 // Kiểm tra năm có phải là năm nhuận không
 function isLeapYear(year) {
     return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
 }

 // Sự kiện thay đổi giá trị năm
 $("#nam").change(function () {
     var nam = $(this).val(); // Lấy giá trị năm từ select box
     if (isLeapYear(parseInt(nam))) {
         console.log(nam + " là năm nhuận");
     } else {
         console.log(nam + " không phải là năm nhuận");
     }
 });
 function Delete(id, type) {
     if (confirm("Bạn có chắc chắn xóa nó này không?")) {
         $.post("/User/RemoveInfo", { id: id, type: type }, function (data) {
             if (data.success) {
                 alert(data.message);
                 $(this).closest('.box-input').remove();
             } else {
                 alert(data.message);
             }
         }).fail(function () {
             alert("Quá trình thực hiện không thành công");
         });
     }
 }


</script>