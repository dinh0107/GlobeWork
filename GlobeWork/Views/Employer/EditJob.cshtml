@model GlobeWork.ViewModel.InsertEmployerViewModel
@{
    ViewBag.Title = "Cập nhật tin tuyển dụng";
    Layout = "~/Views/Shared/_EmployerLayout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(a => a.JobPost.Id)
    <div class="contents-header">
        <h2>@ViewBag.Title</h2>
        <div class="btn-group d-dl">
            <div class="d-flex align-items-center mr-3">
                <label class="mb-0 mr-2">
                    Hiển thị
                </label>
                @Html.CheckBoxFor(a => a.JobPost.Active, new { @checked = "checked" })
            </div>
            <button class="btn btn-primary">Lưu lại</button>
            <button class="btn btn-danger">Huỷ bỏ</button>
        </div>
    </div>
    <div class="container py-3">
        <div class="box-content mb-4">
            @Html.ValidationSummary(true)
            <div class="box-header">
                <h3>
                    Thông tin chung
                </h3>
            </div>
            <div class="box-body">
                <div class="form-group">
                    <label>
                        Tiêu đề tuyển dụng <i class="text-danger">*</i>
                    </label>
                    @Html.TextBoxFor(a => a.JobPost.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(a => a.JobPost.Name)
                </div>
                <div class="row">
                    <div class="form-group col-4">
                        <label>
                            Ngành nghề <i class="text-danger">*</i>
                        </label>
                        <select class="v-select" name="CareerId">
                            @foreach (var item in Model.Careers)
                            {
                                <option @if (item.Id == Model.JobPost.CareerId) { @Html.Raw("selected") } value="@item.Id">
                                    @item.Name
                                </option>
                            }
                        </select>
                    </div>
                    <div class="form-group col-4">
                        <label>
                            Loại <i class="text-danger">*</i>
                        </label>
                        <select class="v-select" name="JobTypeId">
                            @foreach (var item in Model.JobTypes)
                            {
                                <option @if (item.Id == Model.JobPost.JobTypeId) { @Html.Raw("selected") } value="@item.Id">
                                    @item.Name
                                </option>
                            }
                        </select>
                    </div>
                    <div class="form-group col-4">
                        <label>
                            Cấp bậc <i class="text-danger">*</i>
                        </label>
                        <select class="v-select" name="RankId">
                            @foreach (var item in Model.Ranks)
                            {
                                <option @if (item.Id == Model.JobPost.RankId) { @Html.Raw("selected") } value="@item.Id">
                                    @item.Name
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-4">
                        <label>
                            Hạn nhận hồ sơ <i class="text-danger">*</i>
                        </label>
                        @*@Html.TextBoxFor(a => a.JobPost.ExpirationDate, "{0:dd/MM/yyyy HH:mm}", new { @class = "form-control datetimepicker", @placeholder = "Chọn ngày hết hạn nhận hồ sơ" })*@
                        <input type="text" name="JobPost.ExpirationDate" class="form-control datetimepicker" placeholder="Chọn ngày hết hạn nhận hồ sơ" value="@Model.JobPost.ExpirationDate" autocomplete="off" />
                    </div>
                    <div class="form-group col-2">
                        <label>
                            Số lượng <i class="text-danger">*</i>
                        </label>
                        @Html.TextBoxFor(a => a.JobPost.Quantity, new { @class = "input-number custom-input" })
                    </div>
                    <div class="form-group col-2">
                        <label>
                            Số ngày hiện thị nổi bật
                        </label>
                        @Html.TextBoxFor(a => a.DateHot, new { @class = "input-number custom-input" })
                    </div>
                    <div class="form-group col-4">
                        <label>
                            Giới tính <i class="text-danger">*</i>
                        </label>
                        <select class="v-select" name="JobPost.Gender">
                            <option value="nam" @if (Model.JobPost.Gender == "nam") { @Html.Raw("selected") }>
                                Nam
                            </option>
                            <option value="nữ" @if (Model.JobPost.Gender == "nữ") { @Html.Raw("selected") }>
                                Nữ
                            </option>
                            <option value="Không yêu cầu" @if (Model.JobPost.Gender == "Không yêu cầu") { @Html.Raw("selected") }>
                                Không yêu cầu
                            </option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="box-content mb-4">
            <div class="box-header">
                <h3>
                    Yêu cầu chung
                </h3>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="form-group col-4">
                        <label>
                            Kinh nghiệm <i class="text-danger">*</i>
                        </label>
                        @Html.EnumDropDownListFor(model => model.JobPost.Experiences, new { @class = "v-select" })
                    </div>
                    <div class="form-group col-4">
                        <label>
                            Kỹ năng cần có <i class="text-danger">*</i>
                        </label>
                        <select class="v-select-multiple" multiple name="skill" required>
                            @foreach (var item in Model.Skills)
                            {
                                <option @if (Model.JobPost.Skills.Contains(item)) { @Html.Raw("selected") } value="@item.Id">@item.SkillName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group col-4">
                        <label>
                            Mức lương <i class="text-danger">*</i>
                        </label>
                        @Html.EnumDropDownListFor(model => model.JobPost.Wages, new { @class = "v-select" })
                    </div>
                    @*<div class="form-group col-6">
                            <label>
                                Thành phố <i class="text-danger">*</i>
                            </label>
                            <select class="v-select-multiple" name="city" multiple required>
                                @foreach (var item in Model.Citys)
                                {
                                    var isSelected = Model.JobPost.Cities.Any(a => a.Id == item.Id);
                                    <option @(isSelected ? "selected" : "") value="@item.Id">
                                        @item.Name
                                    </option>
                                }
                            </select>
                        </div>*@
                    <div class="form-group col-3">
                        <label>
                            Quốc gia <i class="text-danger">*</i>
                        </label>
                        <select class="v-select" name="JobPost.CounId" required id="CounId">
                            <option value="">
                                Quốc gia
                            </option>
                            @foreach (var item in Model.Countries)
                            {
                                <option @if (Model.JobPost.CounId == item.Id) { @Html.Raw("selected") } value="@item.Id">
                                    @item.Name
                                </option>
                            }
                        </select>
                    </div>
                    <div class="form-group col-3">
                        <label>
                            Thành phố <i class="text-danger">*</i>
                        </label>
                        <select id="city" name="city" required multiple>
                            @*@foreach (var item in Model.Citys)
                                {
                                    var isSelected = Model.JobPost.Cities.Any(a => a.Id == item.Id);
                                    <option @(isSelected ? "selected" : "") value="@item.Id">
                                        @item.Name
                                    </option>
                                }*@
                        </select>
                    </div>
                    <div class="form-group col-6">
                        <label>
                            Địa chỉ cụ thể <i class="text-danger">*</i>
                        </label>
                        @Html.TextBoxFor(a => a.JobPost.Address, new { @class = "form-control", @placeholder = "Địa chỉ cụ thể" })
                        @Html.ValidationMessageFor(a => a.JobPost.Address)
                    </div>
                    <div class="col-6 form-group">
                        <label>
                            Danh sách ảnh
                        </label>
                        <input type="file" id="fileupload" name="files[]" accept="image/*" multiple="" style="flex:none !important;" />
                        <ul id="ListImages">
                            @if (Model.JobPost.Image != null)
                            {
                                var i = 1;
                                var arrPic = Model.JobPost.Image.Split(',');
                                foreach (var item in arrPic)
                                {
                                    <li>
                                        <input type="hidden" name="Pictures" value="@item" />
                                        <img src="@Path.Combine("/images/job/",item)?w=80&h=80&mode=crop" alt="" />
                                        <a href="javascript:;" id="@i" onclick="delfile( '@i')"><img src="/content/admin/icon-delete.png" alt="" /></a>
                                    </li>
                                    i = i + 1;
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="box-content mb-4">
            <div class="box-header">
                <h3>
                    Thông tin chi tiết
                </h3>
            </div>
            <div class="box-body">
                <div class="form-group">
                    <label>
                        Mô tả công việc <i class="text-danger">*</i>
                    </label>
                    @Html.EditorFor(a => a.JobPost.Body)
                </div>
                <div class="form-group">
                    <label>
                        Yêu cầu ứng viên <i class="text-danger">*</i>
                    </label>
                    @Html.EditorFor(a => a.JobPost.Requirement)
                </div>
                <div class="form-group">
                    <label>
                        Quyền lợi ứng viên <i class="text-danger">*</i>
                    </label>
                    @Html.EditorFor(a => a.JobPost.Benefits)
                </div>
                <div class="form-group">
                    <label>
                        Địa điểm làm việc <i class="text-danger">*</i>
                    </label>
                    @Html.EditorFor(a => a.JobPost.WorkLocation)
                </div>
            </div>
        </div>
        @*<div class="box-content">
                <div class="box-header">
                    <h3>
                        Thông tin nhận CV
                    </h3>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="form-group col-6">
                            <label>
                                Họ và tên người nhận <i class="text-danger">*</i>
                            </label>
                            <input class="form-control" />
                        </div>
                        <div class="form-group col-6">
                            <label>
                                Số điện thoại <i class="text-danger">*</i>
                            </label>
                            <input class="form-control" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label>
                            Email nhận hồ sơ <i class="text-danger">*</i>
                        </label>
                        <input class="form-control" />
                    </div>
                </div>
            </div>*@
    </div>
}
@section scripts{
    <script>
        $(function () {
            $("#ListImages").sortable();
            $("#ListImages").disableSelection();

            $(".input-number").maskMoney({
                precision: 0,
                thousands: ','
            });
        });
        var i = 1;
        $("#fileupload").fileupload({
            add: function (e, data) {
                var uploadErrors = [];
                var acceptFileTypes = /^image\/(gif|jpe?g|png)$/i;
                if (data.originalFiles[0]["type"].length && !acceptFileTypes.test(data.originalFiles[0]["type"])) {
                    uploadErrors.push("Chỉ chấp nhận định dạng jpeg, jpg, png, gif");
                }
                if (data.originalFiles[0]["size"] > 4000000) {
                    uploadErrors.push("Dung lượng ảnh lớn hơn 4MB");
                }
                var totalImg = $("#ListImages .ui-sortable-handle").length;
                console.log(totalImg)
                if (totalImg >= 10) {
                    uploadErrors.push("Chỉ đăng tối đa 10 ảnh");
                }
                if (uploadErrors.length > 0) {
                    alert(uploadErrors.join("\n"));
                    return false;
                } else {
                    data.submit();
                }
                return true;
            },
            url: "/Uploader/Upload?folder=job&r=" + Math.random(),
            dataType: "json",
            done: function (e, data) {
                console.log(data)
                $.each(data.result.files, function (index, file) {
                    $('#ListImages').append('<li><input type="hidden" name="Pictures" value ="' + file.name + '" /><img src="/images/job/' + file.name + '?w=80&h=80"/><a href="javascript:;" id="' + i + '" onclick="delfile(' + i + ')"><img src="/content/admin/icon-delete.png" alt="" style="vertical-align:middle" /></a></li>');
                });
                i = i + 1;
                $("#progress").fadeOut(2000);
            },
            start: function () {
                $("#progress .progress-bar").css("width", "0");
                $("#progress").show();
            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $("#progress .progress-bar").css("width", progress + "%");
            }
        }).prop('disabled', !$.support.fileInput).parent().addClass($.support.fileInput ? undefined : 'disabled');

        function delfile(divid) {
            if (confirm('Bạn có chắc xóa ảnh này?')) {
                $('#' + divid).parent().fadeOut().remove();
            }
        }
        VirtualSelect.init({
            ele: 'select.city',
            required: true,
            multiple: true,
            search: true,
            maxValues: 4,
        });
        $(".datepicker").datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            minDate: 1,
            monthNames: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
            monthNamesShort: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
        });

        VirtualSelect.init({
            ele: '#CounId',
            search: true,
        });
        document.querySelector('#CounId').addEventListener('change', function () {
            const id = $(this).val();
            console.log(id);
            $.getJSON("/Employer/GetCitiesJob", { countruyId: id }, function (data) {
                var options = [];
                $.each(data, function (key, val) {
                    options.push({ label: val.Name, value: val.Id });
                });
                var selectedCityIds = @Html.Raw(Json.Encode(Model.JobPost.Cities.Select(city => city.Id)));

                VirtualSelect.init({
                    ele: '#city',
                    options: options
                });
                document.querySelector('#city').setOptions(options);
                document.querySelector('#city').setValue(selectedCityIds);
             });
        });
    </script>
}