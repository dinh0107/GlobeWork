@model GlobeWork.ViewModel.InserCompanyEmployerViewModel
@{
    ViewBag.Title = "Công ty";
    Layout = "~/Views/Shared/_EmployerLayout.cshtml";
    var date = Model.Company?.EstablishmentDate;
    var formattedDate = date.HasValue ? date.Value.ToString("dd/MM/yyyy") : "";
    var id = Model.Company?.CityId ?? 0;
    var action = "Company";
    if(Model.Company != null)
    {
        action = "UpdateCompany";
    }
    var year = 1900;
}

@using (Html.BeginForm(action, "Employer", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="contents-header">
        <h2>@ViewBag.Title</h2>
        <div class="btn-group d-dl">
            <button type="submit" class="btn btn-primary">Lưu lại</button>
        </div>
    </div>
    <div class="container py-3">
        <div class="box-content">
            <div class="box-header">
                <h3>
                    Thông tin công ty
                </h3>
            </div>
            <div class="box-body profile-tabs" id="tabs">
                <div class="row">
                    <div class="col-xl-3 mb-3">
                        @Html.Action("NavProfile")
                    </div>
                    <div class="col-xl-9">
                        <div class="form-content">
                            @Html.AntiForgeryToken()
                            @if (Model.Company != null)
                            {
                                @Html.HiddenFor(a => a.Company.EmployerId)
                                <div class="company-cover-inner">
                                    <div class="cover-wrapper d-block position-relative">
                                        <img id="coverImage" src="@(Model.Company.Cover != null ? Path.Combine("/images/company/", Model.Company.Cover) : "/Content/images/cover-null.png")" class="lazyload">
                                        <label for="Cover" class="change-cover">
                                            <i class="fa-solid fa-camera"></i> Chỉnh sửa ảnh bìa
                                        </label>
                                        @Html.TextBoxFor(a => a.Company.Cover, new { type = "file", @class = "d-none", @id = "Cover" })
                                    </div>
                                    <div class="company-logo custom-h">
                                        <div class="company-image-logo shadow d-block position-relative overflow-hidden">
                                            <img src="@(Model.Company.Avatar != null ? Path.Combine("/images/company/", Model.Company.Avatar) : "/Content/images/avatar-default.jpg")" class="img-responsive">
                                            <label for="Avatar" class="change-avater">
                                                <i class="fa-solid fa-camera"></i>
                                            </label>
                                            @Html.TextBoxFor(a => a.Company.Avatar, new { type = "file", @class = "d-none", @id = "Avatar" })
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="company-cover-inner mb-5">
                                    <div class="cover-wrapper d-block position-relative">
                                        <img src="~/Content/images/cover-null.png" class="lazyload">
                                        <label for="Cover" class="change-cover">
                                            <i class="fa-solid fa-camera"></i> Chỉnh sửa ảnh bìa
                                        </label>
                                        @Html.TextBoxFor(a => a.Company.Cover, new { type = "file", @class = "d-none", @id = "Cover" })
                                    </div>
                                    <div class="company-logo custom-h d-block">
                                        <div class="company-image-logo shadow position-relative" style="width:150px ; height:150px;">
                                            <img src="~/Content/images/avatar-default.jpg" class="img-responsive">
                                            <label for="Avatar" class="change-avater">
                                                <i class="fa-solid fa-camera"></i>
                                            </label>
                                            @Html.TextBoxFor(a => a.Company.Avatar, new { type = "file", @class = "d-none", @id = "Avatar" })
                                        </div>
                                    </div>
                                </div>
                            }
                            @Html.ValidationSummary(true)
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        @Html.LabelFor(a => a.Company.Name)
                                        @Html.TextBoxFor(a => a.Company.Name, new { @class = "form-control", @placeholder = "Tên công ty" })
                                        @Html.ValidationMessageFor(a => a.Company.Name)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Ngành nghề</label>
                                        <select class="career" name="career" multiple>
                                            @foreach (var item in Model.Careers)
                                            {
                                                if (Model.Company != null && Model.Company.Careers != null)
                                                {
                                                    var isSelected = Model.Company.Careers.Any(a => a.Id == item.Id);
                                                    <option @(isSelected ? "selected" : "") value="@item.Id">@item.Name</option>
                                                }
                                                else
                                                {
                                                    <option value="@item.Id">@item.Name</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        @Html.LabelFor(a => a.Company.WebsiteUrl)
                                        @Html.TextBoxFor(a => a.Company.WebsiteUrl, new { @class = "form-control", @placeholder = "Website công ty", @type = "url" })
                                        @Html.ValidationMessageFor(a => a.Company.WebsiteUrl)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        @Html.LabelFor(a => a.Company.Email)
                                        @Html.TextBoxFor(a => a.Company.Email, new { @class = "form-control", @placeholder = "Email" })
                                        @Html.ValidationMessageFor(a => a.Company.Email)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        @Html.LabelFor(a => a.Company.CompanySize)
                                        @Html.TextBoxFor(a => a.Company.CompanySize, new { @class = "form-control", @placeholder = "Quy mô" })
                                        @Html.ValidationMessageFor(a => a.Company.CompanySize)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group cusotomp-datepicker">
                                        @*@Html.LabelFor(a => a.Company.EstablishmentDate)*@
                                        <label>Năm thành lập</label>
                                        <input type="text" placeholder="Năm thành lập" class="form-control yearpicker" name="Company.EstablishmentDate" value="@formattedDate" autocomplete="off" />
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        @Html.LabelFor(a => a.Company.Age)
                                        @Html.TextBoxFor(a => a.Company.Age, new { @class = "form-control", @placeholder = "Quy mô" })
                                        @Html.ValidationMessageFor(a => a.Company.Age)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Hiển thị nổi bật</label>
                                        @Html.TextBoxFor(a => a.DateHot, new { @class = "input-number custom-input" })
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        @Html.LabelFor(a => a.Company.Phone)
                                        @Html.TextBoxFor(a => a.Company.Phone, new { @class = "form-control", @placeholder = "Hotline công ty" })
                                        @Html.ValidationMessageFor(a => a.Company.Phone)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Quốc gia</label>
                                        <select class="v-select" name="Company.CountryId" required id="CounId">
                                            <option value="">
                                                Quốc gia
                                            </option>
                                            @foreach (var item in Model.Countries)
                                            {
                                                if (Model.Company != null)
                                                {
                                                    var isSelected = Model.Company.CountryId == item.Id;
                                                    <option @(isSelected ? "selected" : "") value="@item.Id">
                                                        @item.Name
                                                    </option>
                                                }
                                                else
                                                {
                                                    <option value="@item.Id">
                                                        @item.Name
                                                    </option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Thành phố</label>
                                        <select class="v-select" name="city" id="city" required>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        @Html.LabelFor(a => a.Company.Address)
                                        @Html.TextBoxFor(a => a.Company.Address, new { @class = "form-control", @placeholder = "Địa chỉ" })
                                        @Html.ValidationMessageFor(a => a.Company.Address)
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        @Html.LabelFor(a => a.Company.Introduct)
                                        @Html.EditorFor(a => a.Company.Introduct)
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        @Html.LabelFor(a => a.Company.Product)
                                        @Html.EditorFor(a => a.Company.Product)
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(a => a.Company.GoogleMap)
                                        @Html.TextAreaFor(a => a.Company.GoogleMap, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(a => a.Company.VideoYoutube)
                                        @Html.TextAreaFor(a => a.Company.VideoYoutube, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<link href="~/Content/sweetalert2.css" rel="stylesheet" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link href="~/Content/datepicker.css" rel="stylesheet" />
@section scripts{
    <script src="~/Scripts/sweetalert2.js"></script>
    <script>
        $('#Cover').change(function () {
            var input = this;
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#coverImage').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        });
        $('#Avatar').change(function () {
            var input = this;
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('.img-responsive').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        });
        $(".datepicker").datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true
        });
        $(".yearpicker").datepicker({
            dateFormat: 'dd/mm/yy',
            changeYear: true, // Cho phép thay đổi năm
            yearRange: 'c-100:c', // Chỉ cho phép chọn năm từ năm hiện tại trở về 100 năm trước đến năm hiện tại
            showButtonPanel: true, // Hiển thị nút để chuyển đến tháng và năm hiện tại
            onClose: function (dateText, inst) {
                $(this).datepicker('setDate', new Date(inst.selectedYear, 0, 1)); // Thiết lập ngày thành 1 tháng 1 của năm đã chọn
            }
        });

        VirtualSelect.init({
            ele: 'select.career',
            required: true,
            multiple: true,
            search: true,
            maxValues: 4,
        });

         VirtualSelect.init({
              ele: '#CounId',
              search: true,
         });
        document.querySelector('#CounId').addEventListener('change', function () {
                const id = $(this).val();
                console.log(id);
                $.getJSON("/Employer/GetCitiesJob", { countruyId: id }, function (data) {
                    var options = [];
                    $.each(data, function (key, val) {
                        options.push({ label: val.Name, value: val.Id });
                    });
                    var selectId = @id;
                    VirtualSelect.init({
                        ele: '#city',
                        options: options
                    });
                    document.querySelector('#city').setOptions(options);
                    document.querySelector('#city').setValue(selectId);
                 });
        });
            @if (ViewBag.Result == "amount")
            {
                <Text>
                    Swal.fire({
                        icon: "error",
                        title: "Tài khoản không đủ",
                        text: "Vui lòng nạp tiền để tiếp tục sử dụng dịch vụ!",
                    });
                </Text>
             }
        @if (ViewBag.Result == "success")
        {
            <Text>
                new Notify({
                    status: 'success',
                    title: 'Thành công',
                    text: 'Thêm thông tin thành công',
                    effect: 'slide',
                    speed: 600,
                    showIcon: true,
                    showCloseButton: true,
                    autoclose: true,
                    autotimeout: 3000,
                    gap: 70,
                    distance: 20,
                    type: 3,
                    position: 'right top'
                })
            </Text>
         }
        @if (ViewBag.Result == "update")
        {
            <Text>
                new Notify({
                    status: 'success',
                    title: 'Thành công',
                    text: 'Cập nhật thông tin thành công',
                    effect: 'slide',
                    speed: 600,
                    showIcon: true,
                    showCloseButton: true,
                    autoclose: true,
                    autotimeout: 3000,
                    gap: 70,
                    distance: 20,
                    type: 3,
                    position: 'right top'
                })
            </Text>
        }

    </script>
}